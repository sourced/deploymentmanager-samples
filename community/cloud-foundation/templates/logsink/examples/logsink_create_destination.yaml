# Example of the logsink template usage.
#
# The following log sinks can be created:
#   - organization sink
#   - billing account sink
#   - project sink
#   - folder sink
#
# A log sink can be created with the following log destinations:
#   - a Cloud Storage bucket
#   - a PubSub topic
#   - a BigQuery dataset
#
# In this example, log sinks are created as well as creating the log
# destinations resources:
#   - organization sink with a PubSub topic destination resource 
#   - billing account sink with a BigQuery dataset destination resource
#   - project sink with a Cloud Storage bucket destination resource
#   - folder sink with a Cloud Storage bucket destination resource
#
# Replace the following with appropirate values
# <FIXME:pubsub_topic_name>: The pubsub topic name.
# <FIXME:project_id>: The project ID to create the logsink for.
# <FIXME:topic_name>: A pubsub topic name.
# <FIXME:user_account_email_address>: A valid user account.
# <FIXME:billing_account>: The billing account to create the logsink for.
# <FIXME:dataset_name>: The BQ dataset name.
# <FIXME:folder_id>: The folder ID to create the losink for.
# <FIXME:bucket_name>: The GCS bucket name.

imports:
  - path: templates/logsink/logsink.py
    name: logsink.py
  - path: templates/pubsub/pubsub.py
    name: pubsub.py
  - path: templates/bigquery/bigquery_dataset.py
    name: bigquery_dataset.py
  - path: templates/gcs_bucket/gcs_bucket.py
    name: gcs_bucket.py

resources:
  # Project sink with a PubSub destination
  - name: test-project-logsink-pubsub
    type: logsink.py
    properties:
      destinationName: <FIXME:pubsub_topic_name>
      destinationType: pubsub
      projectId: <FIXME:project_id>
      uniqueWriterIdentity: true
      # Properties for the pubsub destination to be created.
      # Refer to templates/pubsub/pubsub.py.schema for supported properties.
      pubsubProperties:
        topic: <FIXME:topic_name>
        accessControl:
          - role: roles/pubsub.admin
            members:
              - user:<FIXME:user_account_email_address>

  # Billing account sink with a BigQuery dataset destination
  - name: test-billing-logsink-bq
    type: logsink.py
    properties:
      destinationName: <FIXME:dataset_name>
      destinationType: bigquery
      billingAccountId: <FIXME:billing_account>
      uniqueWriterIdentity: true
      # Properties for the bq dataset destination to be created
      # Refer to templates/bigquery/bigquery_dataset.py.schema for supported
      # properties.
      # NOTE: There is a issue where BQ does not accept the uniqueWriter
      # returned by the logsink to be used in the userByEmail property.
      # Until that is resolved, this property is not supported.
      # bqProperties:
      #   location: US
      #   access:
      #     - role: OWNER
      #       userByEmail: <FIXME:user_account_email_address>

  # Folder sink with a Cloud Storage bucket destination
  - name: test-folder-logsink-bucket
    type: logsink.py
    properties:
      folderId: <FIXME:folder_id>
      destinationName: <FIXME:bucket_name>
      destinationType: storage
      uniqueWriterIdentity: true
      # Properties for the bucket destination to be created
      # Refer to templates/gcs_bucket/gcs_bucket.py.schema for supported
      # properties.
      storageProperties:
        location: us-east1
        bindings:
          - role: roles/storage.objectViewer
            members:
              - user:<FIXME:user_account_email_address>
