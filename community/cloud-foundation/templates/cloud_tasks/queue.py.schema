# Copyright 2018 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

info:
  title: Cloud Tasks Queue
  author: Sourced Group Inc.
  description: |
    Creates a Cloud Tasks Queue resource.
    For more information on this resource, see
    https://cloud.google.com/tasks/docs/dual-overview

imports:
  - path: queue.py

required:
  - name

properties:
  name:
    type: string
    description: |
      The queue name. Can contain letters ([A-Za-z]), numbers ([0-9]), or
      hyphens (-). The maximum length is 100 characters.
    maximum: 100
  projectId:
    type: string
    description: |
      The project ID where the queue resides. Can contain letters ([A-Za-z]),
      numbers ([0-9]), hyphens (-), colons (:), or periods (.).
  location:
    type: string
    default: us-east1
    description: |
      The canonical ID for the queue's location. The list of available
      locations can be obtained by calling locations.list.
      For more information, see 
      https://cloud.google.com/about/locations/.
  rateLimits:
    type: object
    description: |
      Rate limits for task dispatches. rateLimits controls the total rate of 
      dispatches from a queue (i.e. all traffic dispatched from the queue,
      regardless of whether the dispatch is from a first attempt or a retry).
    properties:
      maxDispatchesPerSecond:
        type: number
        description: |
          The maximum rate at which tasks are dispatched from this queue.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default. For App Engine queues, the maximum allowed value is 500.
          This field has the same meaning as rate in queue.yaml/xml.
          https://cloud.google.com/appengine/docs/standard/python/config/queueref#rate
        maximum: 500
      maxConcurrentDispatches:
        type: number
        description: |
          The maximum number of concurrent tasks that Cloud Tasks allows to be
          dispatched for this queue. After this threshold has been reached,
          Cloud Tasks stops dispatching tasks until the number of concurrent
          requests decreases. If unspecified when the queue is created, Cloud
          Tasks will pick the default. This field has the same meaning as
          max_concurrent_requests in queue.yaml/xml. For more info see
          https://cloud.google.com/appengine/docs/standard/python/config/queueref#max_concurrent_requests
        maximum: 5000
  retryConfig:
    type: object
    description: |
      Settings that determine the retry behavior.
      For tasks created using Cloud Tasks: the queue-level retry settings apply
      to all tasks in the queue that were created using Cloud Tasks.
      Retry settings cannot be set on individual tasks.
      For tasks created using the App Engine SDK: the queue-level retry
      settings apply to all tasks in the queue which do not have retry settings
      explicitly set on the task and were created by the App Engine SDK. 
      See App Engine documentation.
      https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/retrying-tasks
    properties:
      maxAttempts:
        type: number
        description: |
          Number of attempts per task. Cloud Tasks will attempt the task
          maxAttempts times (that is, if the first attempt fails, then there
          will be maxAttempts - 1 retries). Must be >= -1.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default. -1 indicates unlimited attempts.
          This field has the same meaning as task_retry_limit in queue.yaml/xml.
        minimum: -1
      maxRetryDuration:
        type: string
        description: |
          If positive, maxRetryDuration specifies the time limit for retrying a
          failed task, measured from when the task was first attempted.
          Once maxRetryDuration time has passed and the task has been attempted
          maxAttempts times, no further attempts will be made and the task will
          be deleted. If zero, then the task age is unlimited.
          If unspecified when the queue is created, Cloud Tasks will pick the
          default. maxRetryDuration will be truncated to the nearest second.
          This field has the same meaning as taskAgeLimit in queue.yaml/xml.
          A duration in seconds with up to nine fractional digits, terminated
          by 's'. for example: "3.5s".
      minBackoff:
        type: string
        description: |
          A task will be scheduled for retry between minBackoff and maxBackoff
          duration after it fails, if the queue's RetryConfig specifies that
          the task should be retried. If unspecified when the queue is created,
          Cloud Tasks will pick the default. minBackoff will be truncated to
          the nearest second. This field has the same meaning as 
          min_backoff_seconds in queue.yaml/xml.
          https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters
          A duration in seconds with up to nine fractional digits, terminated
          by 's'. For example: "3.5s".
      maxBackoff:
        type: string
        description: |
          A task will be scheduled for retry between minBackoff and maxBackoff
          duration after it fails, if the queue's RetryConfig specifies that
          the task should be retried. If unspecified when the queue is created,
          Cloud Tasks will pick the default. maxBackoff will be truncated to
          the nearest second. This field has the same meaning as
          max_backoff_seconds in queue.yaml/xml.
          A duration in seconds with up to nine fractional digits, terminated
          https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters
          by 's'. For example: "3.5s".
      maxDoublings:
        type: number
        description: |
          A task will be scheduled for retry between minBackoff and maxBackoff
          duration after it fails, if the queue's RetryConfig specifies that
          the task should be retried. If unspecified when the queue is created,
          Cloud Tasks will pick the default. maxBackoff will be truncated to 
          the nearest second. This field has the same meaning as 
          max_backoff_seconds in queue.yaml/xml.
          https://cloud.google.com/appengine/docs/standard/python/config/queueref#retry_parameters
          A duration in seconds with up to nine fractional digits, terminated
          by 's'. For example: "3.5s".
  appEngineHttpQueue:
    type: object
    description: App Engine HTTP queue.
    properties:
      appEngineRoutingOverride:
        type: object
        description: |
          Overrides for the task-level appEngineRouting.
          If set, appEngineRoutingOverride is used for all tasks in the queue,
          no matter what the setting is for the task-level appEngineRouting.
          For more info see:
          https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed
          https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed
          https://cloud.google.com/tasks/docs/reference/rest/v2beta3/projects.locations.queues.tasks#AppEngineHttpRequest.FIELDS.app_engine_routing
        properties:
          service:
            type: string
            description: |
              App service. By default, the task is sent to the service which
              is the default service when the task is attempted.
              For some queues or tasks which were created using the App Engine
              Task Queue API, host is not parsable into service, version, and
              instance. For example, some tasks which were created using the
              App Engine SDK use a custom domain name; custom domains are not
              parsed by Cloud Tasks. If host is not parsable, then service, 
              version, and instance are the empty string.
          version:
            type: string
            description: |
              App Version. By default, the task is sent to the version which
              is the default version when the task is attempted.
              For some queues or tasks which were created using the App Engine
              Task Queue API, host is not parsable into service, version, and
              instance. For example, some tasks which were created using the
              App Engine SDK use a custom domain name; custom domains are not
              parsed by Cloud Tasks. If host is not parsable, then service,
              version, and instance are the empty string.
          instance:
            type: string
            description: |
              App instance. By default, the task is sent to an instance which
              is available when the task is attempted.
              Requests can only be sent to a specific instance if manual
              scaling is used in App Engine Standard. App Engine Flex does not
              support instances.
              For more information, see 
              App Engine Standard request routing:
              https://cloud.google.com/appengine/docs/standard/python/how-requests-are-routed
              and
              App Engine Flex request routing:
              https://cloud.google.com/appengine/docs/flexible/python/how-requests-are-routed

outputs:
  properties:
    - maxBurstSize:
        type: number
        description: |
          Max burst size limits how fast tasks in queue are processed when many
          tasks are in the queue and the rate is high. This field allows the
          queue to have a high rate so processing starts shortly after a task
          is enqueued, but still limits resource usage when many tasks are 
          enqueued in a short period of time.
    - state:
        type: string
        description: The state of the queue.
        enum:
          - STATE_UNSPECIFIED
          - RUNNING
          - PAUSED
          - DISABLED

documentation:
  - templates/cloud_tasks/README.md

examples:
  - templates/cloud_tasks/examples/cloud_tasks_task.yaml
  - templates/cloud_tasks/examples/cloud_tasks_queue.yaml
