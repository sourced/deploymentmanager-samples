# Copyright 2017 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

info:
  title: App Engine
  author: Sourced Group Inc.
  description: |
    Supports creation of an App Engine resource.

required:
  - servicesId
  - appsId

properties:
  servicesId:
    type: string
    description: Part of the `parent` value. See documentation on `appsId`.
  appsId:
    type: string
    description: |
      Part of the `parent` value - the name of the parent resource to create
      this version under. For example, "apps/myapp/services/default."
  id:
    type: string
    description: |
      the relative name of the version within the service. For example, v1.
      Version names can contain only lowercase letters, numbers, or hyphens.
      Reserved names: "default", "latest", and any name with the prefix "ah-".
  inboundServices:
    type: array
    description: |
      Application configuration. Before receiving email or XMPP messages, the
      application must be configured to enable the service.
    items:
      type: string
      description: The available inbound services.
      enum:
        - INBOUND_SERVICE_UNSPECIFIED
        - INBOUND_SERVICE_MAIL
        - INBOUND_SERVICE_MAIL_BOUNCE
        - INBOUND_SERVICE_XMPP_ERROR
        - INBOUND_SERVICE_XMPP_MESSAGE
        - INBOUND_SERVICE_XMPP_SUBSCRIBE
        - INBOUND_SERVICE_XMPP_PRESENCE
        - INBOUND_SERVICE_CHANNEL_PRESENCE
        - INBOUND_SERVICE_WARMUP
  instanceClass:
    type: string
    description: |
      The instance class used to run the version. Valid values are:
      AutomaticScaling: F1, F2, F4, F4_1G
      ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1G
      Defaults to F1 for AutomaticScaling and B1 for ManualScaling or
      BasicScaling.
    enum:
      - F1
      - F2
      - F4
      - F4_1G
      - B1
      - B2
      - B4
      - B8
      - B4_1G
  network:
    type: object
    description: Extra network settings. Applicable only to VM runtimes.
    properties:
      forwardedPorts:
        type: string
        description: |
          The list of ports, or port pairs, to forward from the virtual machine
          to the application container.
      instanceTag:
        type: string
        description: The tag to apply to the VM instance during creation.
      name:
        type: string
        description: |
          The Google Cloud Platform network where the virtual machines are
          created. Specify the short name, not the resource path.
          Defaults to "default".
      subnetworkName:
        type: string
        description: |
          The Google Cloud Platform sub-network where the virtual machines are
          created. Specify the short name, not the resource path.
          If a subnetwork name is specified, the network name is also required
          unless it is for the default network.
          If the network the VM instance is being created in is a Legacy
          network, the IP address is allocated from the IPv4Range.
          If the network the VM instance is being created in is an auto Subnet
          Mode Network, only the network name should be specified (not the
          subnetworkName), and the IP address is created from the IPCidrRange
          of the subnetwork that exists in that zone for that network.
          If the network the VM instance is being created in is a custom Subnet
          Mode Network, the subnetworkName must be specified, and the IP
          address is created from the IPCidrRange of the subnetwork.
          If specified, the subnetwork must exist in the same region as the
          Flex app.
  zones:
    type: array
    description: |
      Google Compute Engine zones supported by this version in the App Engine
      flexible environment.
    items:
      type: string
  resources:
    type: object
    description: Machine resources for the version.
      properties:
        cpu:
          type: number
          description: The required number of CPU cores.
        diskGb:
          type: number
          description: The required disk size (GB).
        memoryGb:
          type: number
          description: The required memory (GB).
        volumes:
          type: object
          description: Volumes mounted within the app container.
          properties:
            name:
              type: string
              description: The unique name for the volume.
            volumeType:
              type: string
              description: The underlying volume type; e.g., 'tmpfs'.
            sizeGb:
              type: number
              description: The volume size (GB).
  runtime:
    type: string
    description: The desired runtime. For example, python27.
  threadsafe:
    type: boolean
    description: |
      Defines whether multiple concurrent requests can be dispatched to this
      version.
  vm:
    type: boolean
    description: |
      Defined whether this version is deployed in a container on a virtual
      machine.
  env:
    type: string
    description: |
      The App Engine execution environment to use for this version.
      Defaults to 1.
  servingStatus:
    type: string
    description: |
      The current serving status of this version. Only versions with the
      SERVING status create instances and can be billed.
      SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
    enum:
      - SERVING_STATUS_UNSPECIFIED
      - SERVING
      - STOPPED
  runtimeApiVersion:
    type: string
    description: |
      The version of the API in the given runtime environment. See the
      app.yaml reference for valid values at
      https://cloud.google.com/appengine/docs/standard//config/appref.
  handlers:
    type: array
    description: |
      The ordered list of URL-matching patterns to be applied to the incoming
      requests. The first matching URL handles the request, and no other
      request handlers are attempted.
    items:
      type: object
      description: |
        The URL pattern and description of how the URL must be handled. App
        Engine can handle URLs by executing application code or by serving
        static files uploaded with the version, such as images, CSS, or
        JavaScript.
      properties:
        urlRegex:
          type: string
          description: |
            The URL prefix. Uses regular expression syntax, which means regexp
            special characters must be escaped, but should not contain
            groupings. All URLs that begin with this prefix are handled by this
            handler, using the portion of the URL after the prefix as part of
            the file path.
        securityLevel:
          type: string
          description: The security (HTTPS) enforcement for the URL.
          enum:
            - SECURE_UNSPECIFIED
            - SECURE_DEFAULT
            - SECURE_NEVER
            - SECURE_OPTIONAL
            - SECURE_ALWAYS
        login:
          type: string
          description: |
            The level of login required to access the resource. Not supported
            for Node.JS in the App Engine standard environment.
          enum:
            - LOGIN_UNSPECIFIED
            - LOGIN_OPTIONAL
            - LOGIN_ADMIN
            - LOGIN_REQUIRED
        authFailAction:
          type: string
          description: |
            The action to take when users access resources that require
            authentication. Defaults to "redirect".
          enum:
            - AUTH_FAIL_ACTION_UNSPECIFIED
            - AUTH_FAIL_ACTION_REDIRECT
            - AUTH_FAIL_ACTION_UNAUTHORIZED
        redirectHttpResponseCode:
          type: string
          description: The redirect code.
          enum:
            - REDIRECT_HTTP_RESPONSE_CODE_UNSPECIFIED
            - REDIRECT_HTTP_RESPONSE_CODE_301
            - REDIRECT_HTTP_RESPONSE_CODE_302
            - REDIRECT_HTTP_RESPONSE_CODE_303
            - REDIRECT_HTTP_RESPONSE_CODE_307
        oneOf:
          - staticFiles:
            type: object
            description: |
              Files served directly to the user for a given URL, such as 
              images, CSS stylesheets, or JavaScript source files. Static file
              handlers describe which files in the application directory are
              static files, and which URLs serve them.
            properties:
              path:
                type: string
                description: |
                  The path to the static files matched by the URL pattern, from
                  the application root directory. The path can refer to text
                  matched in groupings in the URL pattern.
              uploadPathRegex:
                type: string
                description: |
                  The regular expression that matches the file paths for all
                  files that must be referenced by this handler.
              httpHeaders:
                type: array
                description: |
                  HTTP headers to use for all responses from the URLs.
                  An object containing a list of key-value pairs. For
                  example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
                items:
                  type: object
                  additionalProperties:
                    type: string
              mimeType:
                type: string
                description: |
                  The MIME type used to serve all files served by the handler.
                  Defaults to file-specific MIME types, which are derived from
                  each file's filename extension.
              expiration:
                type: string
                description: |
                  The duration format as described at https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
                  the time period withing which a static file served by the
                  handler must be cached by web proxies and browsers.
                  A duration in seconds with up to nine fractional digits,
                  terminated by 's'. For example, "3.5s".
              requireMatchingFile:
                type: boolean
                description: |
                  Defines whether the handler must match the request if the
                  file referenced by the handler does not exist.
              applicationReadable:
                type: boolean
                description: |
                  Defines whether files must also be uploaded as code data. By
                  default, files declared in static file handlers are uploaded
                  as static data, and are only served to end users; they cannot
                  be read by the application. If Trues, uploads are charged
                  against both your code and static data storage resource
                  quotas.
          - script:
            type: object
            description: |
              Executes a script to handle the requests that match the URL
              pattern. Only the auto value is supported for Node.JS in the
              App Engine standard environment; for example, "script": "auto".
            properties:
              scriptPath:
                type: string
                description: |
                  The path to the script from the application root directory.
          - apiEndpoint:
            type: object
            description: API Endpoints used to handle requests.
            properties:
              scriptPath:
                type: string
                description: |
                  The path to the script from the application root directory.
  errorHandlers:
    type: array
    description: Custom static error pages. Limited to 10KB per page.
    items:
      type: object
      description: |
        The custom static error page to be served when an error occurs.
      properties:
        errorCode:
          type: string
          description: The error condition the handler applies to.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - ERROR_CODE_DEFAULT
            - ERROR_CODE_OVER_QUOTA
            - ERROR_CODE_DOS_API_DENIAL
            - ERROR_CODE_TIMEOUT
        staticFile:
          type: string
          description: The Static file content to be served for this error.
        mimeType:
          type: string
          description: The MIME type of the file. Defaults to "text/html".
  libraries:
    type: array
    description: |
      Configuration for third-party Python runtime libraries that are required
      by the application.
    items:
      type: object
      description: |
        The third-party Python runtime library required by the application.
      properties:
        name:
          type: string
          description: The library name; for example, "django".
        version:
          type: string
          description: The version of the library to select, or "latest".
  envVariables:
    type: array
    description: |
      Environment variables available to the application.
      An object containing a list of key-value pairs. For
      example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
    items:
      type: object
      additionalProperties:
        type: string
  defaultExpiration:
    type: string
    description: |
      The time period for which static files must be cached by web proxies
      and browsers. Applicable only if the corresponding StaticFilesHandler
      does not specify its own expiration time. Expressed in seconds with up
      to nine fractional digits, terminated by 's'. For example, "3.5s".
      For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
  healthCheck:
    type: object
    description: |
      Configures healthchecking for instances. Unhealthy instances are stopped
      and replaced with new instances. Applicable only in the App Engine
      flexible environment.
    properties:
      disableHealthCheck:
        type: boolean
        description: |
          Defines whether to explicitly disable healthchecks for this instance.
      host:
        type: string
        description: |
          The host header to send when performing an HTTP healthcheck. For
          example, "myapp.appspot.com".
      healthyThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive successful healthchecks required before
          receiving traffic.
      unhealthyThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive failed health checks required before
          removing traffic.
      restartThreshold
        type: number
        format: uint32
        description: |
          The number of consecutive failed healthchecks required before the
          instance is restarted.
      checkInterval:
        type: string
        description: |
          The interval between healthchecks. Expressed in seconds with up to
          nine fractional digits, terminated by 's'. For example, "3.5s".
         For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      timeout:
        type: string
        description: |
          The time period before the healthcheck is considered failed.
          Expressed in seconds with up to nine fractional digits, terminated
          by 's'. For example, "3.5s". For details, see
          https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
  readinessCheck:
    type: object
    description: |
      Readiness checking configuration for VM instances. Unhealthy instances
      are removed from the traffic rotation.
    properties:
      path:
        type: string
        description: The request path.
      host:
        type: string
        description: |
          The host header to send when performing an HTTP Readiness check. For
          example, "myapp.appspot.com".
      failureThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive failed checks required before removing
          traffic.
      successThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive successful checks required before receiving
          traffic.
      checkInterval:
        type: string
        description: |
          The time interval between healthchecks. Expressed in seconds with up
          to nine fractional digits, terminated by 's'. For example, "3.5s".
          For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      timeout:
        type: string
        description: |
          The time period before the check is considered failed. Expressed in
          seconds with up to nine fractional digits, terminated by 's'.
          For example, "3.5s". For details, see
          https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      appStartTimeout
        type: string
        description: |
          The time limit on application initialization, measured from the
          moment the application successfully replies to a healthcheck until
          it is ready to serve traffic. Expressed in seconds with up to nine
          fractional digits, terminated by 's'. Fpr example: "3.5s".
          For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
  readinessCheck:
    type: object
    description: |
      Configures readiness health checking for instances. Unhealthy instances
      are not put into the backend traffic rotation.
    properties:
      path:
        type: string
        description: The request path.
      host:
        type: string
        description: |
          The host header to send when performing an HTTP Readiness check.
          For example, "myapp.appspot.com".
      failureThreshold:
        type: number
        format: uint32
        description: |
          Number of consecutive failed checks required before removing traffic.
      successThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive successful checks required before receiving
          traffic.
      checkInterval:
        type: string
        description: |
          The time interval between health checks. Expressed in seconds with up
          to nine fractional digits, terminated by 's'. For example, "3.5s".
          For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      timeout:
        type: string
        description: |
          The time period before the check is considered failed. Expressed in
          seconds with up to nine fractional digits, terminated by 's'. For
          example, "3.5s". For details, see
          https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      appStartTimeout:
        type: string
        description: |
          The time limit on application initialization, measured from the
          moment the application successfully replies to a healthcheck until it
          is ready to serve traffic. Expressed in seconds with up to nine
          fractional digits, terminated by 's'. For example, "3.5s".
          For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
  livenessCheck:
    type: object
    description: |
      Configures the liveness health checking for instances. Unhealthy
      instances are stopped and replaced with new instances.
    properties:
      path:
        type: string
        description: The request path.
      host:
        type: string
        description: |
          The host header to send when performing an HTTP Readiness check.
          For example, "myapp.appspot.com".
      failureThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive failed checks required before removing
          traffic.
      successThreshold:
        type: number
        format: uint32
        description: |
          The number of consecutive successful checks required before receiving
          traffic.
      checkInterval:
        type: string
        description: |
          The time interval between health checks. Expressed in seconds with
          up to nine fractional digits, terminated by 's'. For example, "3.5s".
          For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      timeout:
        type: string
        description: |
          The time period before the check is considered failed. Expressed in
          seconds with up to nine fractional digits, terminated by 's'. For
          example, "3.5s". For details, see
          https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
      initialDelay:
        type: string
        description: |
          The initial delay before starting to execute the checks. Expressed
          in seconds with up to nine fractional digits, terminated by 's'.
          For example, "3.5s". For details, see
          https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
  nobuildFilesRegex:
    type: string
    description: |
      The files that match this pattern will not be built into the version.
      Applicable only to Go runtimes.
  deployment:
    type: string
    description: |
      The code and application artifacts that make up the version.
    properties:
      files:
        type: array
        description: |
          The manifest of the files stored in Google Cloud Storage that are
          included as part of this version. All files must be readable using
          the credentials supplied with the call.
          An object containing a list of "key": value pairs.The "value"
          is an object of type FileInfo.
          Example: { "main.py":
              {"sourceUrl": https://storage.googleapis.com/example/example.py}
          }.
        items:
          type: object
          additionalProperties:
            $ref: '#/definitions/FileInfo'
      container:
        type: object
        description:
          The Docker image for the container that runs the version. Applicable
          on;y to instances running in the App Engine flexible environment.
        properties:
          type: string
          description: |
            The URI to the hosted container image in Google Container Registry.
            The URI must be fully qualified and include a tag or digest.
            Examples: "gcr.io/my-project/image:tag" or
            "gcr.io/my-project/image@digest".
      zip:
        type: object
        description: |
          The zip file for the deployment (if this is a zip deployment).
        properties:
          sourceUrl:
            type: string
            description: |
              The URL of the zip file to deploy from. Must be a URL to a
              resource in Google Cloud Storage in the form
              'http(s)://storage.googleapis.com/<bucket>/<object>'.
          filesCount:
            type: number
            description: |
              The estimated number of files in a zip for a zip deployment.
              If set, must be greater than or equal to the actual number of
              files. Used for optimizing performance; if not provided,
              the deployment may be slow.
      cloudBuildOptions:
        type: object
        description: |
          Options for any Google Cloud Build builds created as part of
          this deployment.
          Note that this is orthogonal to the build parameter, where the
          deployment depends on an already existing cloud build. These
          options will only be used if a new build is created, such as
          when deploying to the App Engine flexible environment using
          files or a zip.
        properties:
          appYamlPath:
            type: string
            description: |
              The path to the yaml file used in deployment. Used to determine
              runtime configuration details. Required for flexible environment
              builds. For details, see https://cloud.google.com/appengine/docs/standard/python/config/appref.
          cloudBuildTimeout:
            type: string
            description: |
              The Cloud Build timeout used as part of any dependent builds
              performed by the version creation. Defaults to 10 minutes.
              Expressed in seconds with up to nine fractional digits,
              terminated by 's'. For example: "3.5s". For details, see
              https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
  endpointsApiService:
    type: object
    description: |
      Cloud Endpoints configuration. If set, the Cloud Endpoints Extensible
      Service Proxy is provided to serve the API implemented by the app.
    properties:
      name:
        type: string
        description: |
          The endpoint service name, which is the name of the "service"
          resource in the Service Management API. For example,
          "myapi.endpoints.myproject.cloud.goog".
      configid:
        type: string
        description: |
          The Endpoints service configuration ID, as specified by the Service
          Management API. For example, "2016-09-19r1".
          By default, the rollout strategy for Endpoints is
          RolloutStrategy.FIXED. This means that Endpoints starts up with a
          particular configuration ID. When a new configuration is rolled out,
          Endpoints must be given the new configuration ID. The configId field
          is used to give the configuration ID, and is required in this case.
          Endpoints also has a rollout strategy called RolloutStrategy.MANAGED.
          When using this, Endpoints fetches the latest configuration and does
          not need the configuration ID. In this case, configId must be
          omitted.
      rolloutStrategy:
        type: string
        description: |
          The Endpoints rollout strategy. If FIXED, configId must be specified.
          If MANAGED, configId must be omitted.
        enum:
          - UNSPECIFIED_ROLLOUT_STRATEGY
          - FIXED
          - MANAGED
  entrypoint:
    type: object
    description: The entry point for the application.
    properties:
      shell:
        type: string
        description: |
          The shell command in a format that can be fed to bash -c.
  oneOf:
    - automaticScaling:
      type: object
      description: |
        Automatic scaling definition - based on request rate, response
        latencies, and other application metrics.
      properties:
        coolDownPeriod:
          type: string
          description:
            The time period for Autoscaler to wait before it starts collecting
            information from a new instance. This prevents Autoscaler from
            collecting information during instance initialization, when the
            collected usage would not be reliable. Applicable Only in the App
            Engine Flexible environments. Expressed in seconds with up to nine
            fractional digits, terminated by 's'. For example, "3.5s".
            For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
        cpuUtilization:
          type: object
          description: The target scaling by CPU usage.
          properties:
            aggregationWindowLength:
              type: string
              description: |
                The period of time over which the CPU utilization is
                calculated. Expressed in seconds with up to nine fractional
                digits, terminated by 's'. For example, "3.5s". For details,
                see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
            targetUtilization:
              type: number
              description: |
                The target CPU utilization ratio to maintain when scaling. Must
                be between 0 and 1.
        maxConcurrentRequests:
          type: number
          description: |
            The number of concurrent requests an automatic scaling instance can
            accept before the scheduler spawns a new instance. Defaults to a
            runtime-specific value.
        maxIdleInstances:
          type: number
          description: |
            The maximum number of idle instances to be maintained for the
            version.
        maxTotalInstances:
          type: number
          description: |
            Teh maximum number of instances to be started to handle requests
            for the version.
        maxPendingLatency:
          type: string
          description: |
            The maximum amount of time for a request to wait in the pending
            queue before starting a new instance to handle. Expressed in
            seconds with up to nine fractional digits, terminated by 's'.
            Fir example, "3.5s". For details, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
        minIdleInstances:
          type: number
          description: |
            The minimum number of idle instances to be maintained for the
            version. Applicable only gto the default version of a service.
        minTotalInstances:
          type: number
          description: |
            The minimum number of running instances to be maintained for the
            version.
        minPendingLatency:
          type: string
          description: |
            The minimum amount of time for a request to wait in the pending
            queue before starting a new instance to handle it.
            A duration in seconds with up to nine fractional digits, terminated
            by 's'. For example, "3.5s". For details, see
            https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
        requestUtilization:
          type: object
          description: Target scaling by request utilization.
          properties:
            targetRequestCountPerSecond:
              type: number
              description: The target number of requests per second.
            targetConcurrentRequests:
              type: number
              description: The target number of concurrent requests.
        diskUtilization:
          type: object
          description: Target scaling by disk usage.
          properties:
            targetWriteBytesPerSecond:
              type: number
              description: The target number of bytes written per second.
            targetWriteOpsPerSecond:
              type: number
              description: The target number of ops written per second.
            targetReadBytesPerSecond:
              type: number
              description: The target number of bytes read per second.
            targetReadOpsPerSecond:
              type: number
              description: The target number of ops read per seconds.
        networkUtilization:
          type: object
          description: Target scaling by network usage.
          properties:
            targetSentBytesPerSecond:
              type: number
              description: The target number of bytes sent per second.
            targetSentPacketsPerSecond:
              type: number
              description: The target number of packets sent per second.
            targetReceivedBytesPerSecond:
              type: number
              description: The target number of bytes received per second.
            targetReceivedPacketsPerSecond:
              type: number
              description: The target number of packets received per second.
        standardSchedulerSettings:
          type: object
          description: Scheduler settings for standard environment.
          properties:
            targetCpuUtilization:
              type: number
              description: |
                The target CPU utilization ratio to maintain when scaling.
            targetThroughputUtilization:
              type: number
              description: |
                The target throughput utilization ratio to maintain when
                scaling.
            minInstances:
              type: number
              description: |
                The minimum number of instances to run for the version. Set to
                zero to disable the minInstances configuration.
            maxInstances:
              type: number
              description: |
                The maximum number of instances to run for the version. Set to
                zero to disable the maxInstances configuration.
    - basicScaling:
      type: object
      description: |
        Basic scaling definition. A service with basic scaling will create an
        instance when the application receives a request. The instance will be
        turned down when the app becomes idle. Basic scaling is ideal for work
        that is intermittent or driven by user activity.
      properties:
        idleTimeout:
          type: string
          description: |
            The time period after the last request an instance must wait before
            the instance is shut down. Expressed in seconds with up to nine
            fractional digits, terminated by 's'. For example, "3.5s".
            For details, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration.
        maxInstances:
          type: number
          description: |
            The maximum number of instances to create for the version.
    - manualScaling:
      type: object
      description: |
        Manual scaling definition. A service with manual scaling runs
        continuously, allowing you to perform complex initialization and
        rely on the state of its memory over time.
      properties:
        instances:
          type: number
          description: |
            The number of instances to assign to the service at the start. This
            number can later be altered by using the Modules API
            set_num_instances() function.
definitions:
  FileInfo:
    type: object
    description: |
      sourceUrl:
        type: string
        description: |
          URL source to use to fetch this file. Must be a URL to a resource
          in Google Cloud Storage in the form
          'http(s)://storage.googleapis.com/<bucket>/<object>'.
      sha1Sum: string
        type: string
        description: The SHA1 hash of the file, in hex.
      mimeType:
        type: string
        description: |
          The MIME type of the file. Defaults to the value from Google Cloud
          Storage.
outputs:
  properties:
    name:
      type: string
      description: |
        The full path to the Version resource in the API. For
        example, "apps/myapp/services/default/versions/v1".
    createTime:
      type: string
      description: |
        The time when the version was created. A timestamp in the RFC3339 UTC
        "Zulu" format, accurate to nanoseconds. For example,
        "2014-10-02T15:01:23.045123456Z".
    versionUrl:
      type: string
      description: |
        the serving URL for the version. For example,
        "https://myversion-dot-myservice-dot-myapp.appspot.com".

documentation:
  - templates/app_engine/README.md

examples:
  - templates/app_engine/examples/standard_app_engine.yaml
  - templates/app_engine/examples/flexible_app_engine.yaml
